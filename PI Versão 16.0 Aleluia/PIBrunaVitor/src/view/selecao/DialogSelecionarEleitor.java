/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package view.selecao;

import view.selecao.configTabelaSelecao.EleitorSelecionarColumnModel;
import view.selecao.configTabelaSelecao.EleitorSelecionarTableModel;
import view.armazenamento.tabelaArmazenamentoConfig.EleitorTableModel;
import view.cadastros.DialogCadastroDeEleicao;
import conexao.exceptions.ConnectionException;
import conexao.exceptions.SQLStatementException;
import excecaoEleitor.NomeException;
import contreller.DAO.GerenciadorEleitor;
import controller.selecao.GerenciadorSelecaoEleitor;
import controller.selecao.GerenciadorSelecaoVoto;
import excecaoEleitor.MatriculaException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import model.Eleitor;
import model.Voto;
import model.exceptions.ValidarCursoException;
import model.exceptions.ValidarEmailException;

/**
 *
 * @author Aluno
 */
public class DialogSelecionarEleitor extends javax.swing.JDialog {

    private GerenciadorEleitor ge = new GerenciadorEleitor();
    private GerenciadorSelecaoVoto gv = new GerenciadorSelecaoVoto();
    private GerenciadorSelecaoEleitor gse = new GerenciadorSelecaoEleitor();
    private ArrayList<Eleitor> listaEleitor;

    private Eleitor e;

    /**
     * Creates new form DialogSelecionarEleitor
     */
    public DialogSelecionarEleitor(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        try {
            this.listaEleitor = ge.obterTodos();
        } catch (SQLStatementException | ConnectionException | NomeException | MatriculaException | ValidarEmailException | ValidarCursoException ex) {
            JOptionPane.showMessageDialog(this, "Erro: " + ex.getMessage(), "Erro!", JOptionPane.ERROR_MESSAGE);
        }
        initComponents();
        configurarTabela();
        this.setLocationRelativeTo(null);
        this.setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tEleitores = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btConcluido = new javax.swing.JButton();
        btCancelar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        cbPesoVoto = new javax.swing.JComboBox();
        tfFiltrarCurso = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        tfNomeFiltro = new javax.swing.JTextField();
        chbSelecionarTodos = new javax.swing.JCheckBox();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Selecionar Eleitores");

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Seleção de Eleitores", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial Black", 1, 14))); // NOI18N

        tEleitores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nome", "Email", "Curso", "Codigo"
            }
        ));
        tEleitores.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        jScrollPane2.setViewportView(tEleitores);

        jLabel1.setText("Filtros:");

        jLabel3.setText("Curso:");

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.setLayout(new java.awt.GridLayout(1, 0));

        btConcluido.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btConcluido.setForeground(new java.awt.Color(0, 102, 0));
        btConcluido.setText("Concluído");
        btConcluido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btConcluidoActionPerformed(evt);
            }
        });
        jPanel2.add(btConcluido);

        btCancelar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btCancelar.setForeground(new java.awt.Color(0, 0, 204));
        btCancelar.setText("Cancelar");
        btCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarActionPerformed(evt);
            }
        });
        jPanel2.add(btCancelar);

        jLabel5.setText("Peso do voto:");

        cbPesoVoto.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Universal", "50%", "25%" }));
        cbPesoVoto.setSelectedIndex(-1);

        tfFiltrarCurso.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfFiltrarCursoKeyReleased(evt);
            }
        });

        jLabel2.setText("Nome:");

        tfNomeFiltro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfNomeFiltroKeyReleased(evt);
            }
        });

        chbSelecionarTodos.setBackground(new java.awt.Color(204, 255, 204));
        chbSelecionarTodos.setText("Selecionar todos");
        chbSelecionarTodos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chbSelecionarTodosItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(chbSelecionarTodos)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(37, 37, 37)
                                    .addComponent(jLabel3)
                                    .addGap(18, 18, 18)
                                    .addComponent(tfFiltrarCurso, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(39, 39, 39)
                                    .addComponent(jLabel2)
                                    .addGap(18, 18, 18)
                                    .addComponent(tfNomeFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addComponent(jLabel5)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(cbPesoVoto, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(145, 145, 145)
                                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 42, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(2, 2, 2)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tfFiltrarCurso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(tfNomeFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(chbSelecionarTodos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(cbPesoVoto, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btConcluidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btConcluidoActionPerformed
        try {
            
                salvar(listaEleitor);
                
        } catch (SQLStatementException | ConnectionException | NomeException | MatriculaException | ValidarEmailException | ValidarCursoException ex) {
            JOptionPane.showMessageDialog(this, "Erro: " + ex.getMessage(), "Erro!", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btConcluidoActionPerformed

    private void btCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btCancelarActionPerformed

    private void tfFiltrarCursoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfFiltrarCursoKeyReleased

        try {
            if (!this.tfFiltrarCurso.getText().isEmpty()) {
                if (this.tfNomeFiltro.getText().isEmpty()) {
                    listaEleitor = ge.obterTodos(this.tfFiltrarCurso.getText());
                    setListaEleitor(listaEleitor);
                } else {
                    listaEleitor = ge.obterTodosPorNomeECurso(this.tfNomeFiltro.getText(), this.tfFiltrarCurso.getText());
                    setListaEleitor(listaEleitor);
                }
            } else {
                listaEleitor = ge.obterTodos();
                setListaEleitor(listaEleitor);
            }

        } catch (SQLStatementException | ConnectionException | NomeException | MatriculaException | ValidarEmailException | ValidarCursoException ex) {
            JOptionPane.showMessageDialog(rootPane, "Erro: " + ex.getMessage(), "Erro!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_tfFiltrarCursoKeyReleased

    private void tfNomeFiltroKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfNomeFiltroKeyReleased
        try {
            if (!this.tfNomeFiltro.getText().isEmpty()) {
                if (this.tfFiltrarCurso.getText().isEmpty()) {
                    listaEleitor = ge.obterTodosPorNome(this.tfNomeFiltro.getText());
                    setListaEleitor(listaEleitor);
                } else {
                    listaEleitor = ge.obterTodosPorNomeECurso(this.tfNomeFiltro.getText(), this.tfFiltrarCurso.getText());
                    setListaEleitor(listaEleitor);
                }
            } else {
                listaEleitor = ge.obterTodos();
                setListaEleitor(listaEleitor);
            }
        } catch (SQLStatementException | ConnectionException | NomeException | MatriculaException | ValidarEmailException | ValidarCursoException ex) {
            JOptionPane.showMessageDialog(rootPane, "Erro: " + ex.getMessage(), "Erro!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_tfNomeFiltroKeyReleased

    private void chbSelecionarTodosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chbSelecionarTodosItemStateChanged
        if (this.chbSelecionarTodos.isSelected()) {
            for (int x = 0; x < listaEleitor.size(); x++) {
                tEleitores.setValueAt(true, x, 4);
                
            }
        } else {
            for (int x = 0; x < listaEleitor.size(); x++) {
                tEleitores.setValueAt(false, x, 4);
                
            }
        }
    }//GEN-LAST:event_chbSelecionarTodosItemStateChanged
    public void setListaEleitor(java.util.List<Eleitor> listaDados) {
        this.tEleitores.setModel(new EleitorSelecionarTableModel(listaDados));
    }

    private void configurarTabela() {
        try {
            this.setListaEleitor(ge.obterTodos());
        } catch (ConnectionException | SQLStatementException | NomeException | MatriculaException | ValidarEmailException | ValidarCursoException ex) {
            JOptionPane.showMessageDialog(rootPane, "Erro: " + ex.getMessage(), "Erro!", JOptionPane.ERROR_MESSAGE);
        }
        tEleitores.setAutoCreateColumnsFromModel(false);
        java.awt.FontMetrics fm = tEleitores.getFontMetrics(tEleitores.getFont());
        tEleitores.setColumnModel(new EleitorSelecionarColumnModel(fm));
        tEleitores.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    }

    public Eleitor getEleitorSelecionado() {
        return ((EleitorTableModel) tEleitores.getModel()).getObjetoSelecionado(
                tEleitores.getSelectedRow());
    }

    private Voto definirVoto(int posicao) {
        try {
            if (posicao == 0) {
                return gv.getVoto("Universal");
            } else if (posicao == 1) {
                return gv.getVoto("50%");
            } else if (posicao == 2) {
                return gv.getVoto("25%");
            }
        } catch (ConnectionException | SQLStatementException ex) {
            JOptionPane.showMessageDialog(this, "Erro: " + ex.getMessage(), "Erro!", JOptionPane.ERROR_MESSAGE);
        }
        return null;

    }

    private void salvar(ArrayList<Eleitor> listaSalvar) throws SQLStatementException, ConnectionException, NomeException, MatriculaException, ValidarEmailException, ValidarCursoException {
        if (!listaSalvar.isEmpty()) {
            for (int x = 0; x < listaSalvar.size(); x++) {
                if ((boolean) tEleitores.getValueAt(x, 4) == true) {
                    e = new Eleitor();
                    e = listaSalvar.get(x);

                    if (definirVoto(this.cbPesoVoto.getSelectedIndex()) == null || this.cbPesoVoto.getSelectedIndex() < 0) {
                        JOptionPane.showMessageDialog(rootPane, "Atenção: selecione um peso para o voto!", "Atenção!", JOptionPane.WARNING_MESSAGE);
                        break;
                    } else {
                        e.setVoto(definirVoto(this.cbPesoVoto.getSelectedIndex()));
                        gse.inserir(e);
                        DialogCadastroDeEleicao.EleitorTableConfig(gse.obterTodos());
                    }

                }
            }
            this.dispose();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCancelar;
    private javax.swing.JButton btConcluido;
    private javax.swing.JComboBox cbPesoVoto;
    private javax.swing.JCheckBox chbSelecionarTodos;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tEleitores;
    private javax.swing.JTextField tfFiltrarCurso;
    private javax.swing.JTextField tfNomeFiltro;
    // End of variables declaration//GEN-END:variables
}
